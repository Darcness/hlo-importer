let hlodebug=!1;const hloiVer="0.7.2",color1="color: #7bf542",color2="color: #d8eb34",color3="color: #ffffff",color4="color: #cccccc",color5="color: #ff0000";var hlo,userToken,hloButton=!0;async function doHVExport(hero,act){game.modules.get("herovaultfoundry")?.api?.exportToHVFromPBHLO(hero,act)}function hloShim(targetActor){let hlo=new HeroLabImporter;hlo.heroVaultPrompt=!0,userToken=game.settings.get("hlo-importer","userToken");hlo.beginHLOImport(targetActor,userToken)}function hloActive(){return!0}Hooks.on("ready",async function(){"pf2e"!=game.system.id?console.log("%cHLO Importer | %cWrong game system. %cNot enabling.",color1,color5,color4):(console.log("%cHLO Importer | %cinitializing",color1,color4),game.settings.register("hlo-importer","userToken",{name:"User Token (optional)",hint:"Please enter your personal user token. A user token allows external tools (like this one) to access the HLO server and perform export operations.",scope:"world",config:!0,type:String,default:"",onChange:value=>userToken=game.settings.get("hlo-importer","userToken")}),game.settings.register("hlo-importer","debugEnabled",{name:"Enable debug mode",hint:"Debug output will be written to the js console.",scope:"world",config:!0,type:Boolean,default:!1,onChange:value=>hlodebug=game.settings.get("hlo-importer","debugEnabled")})),hlo=new HeroLabImporter(hlodebug),hlodebug=game.settings.get("hlo-importer","debugEnabled"),userToken=game.settings.get("hlo-importer","userToken")}),Hooks.on("herovaultfoundryReady",api=>{hlodebug&&console.log("Disabling HLO button since herovault is loaded"),hloButton=!1}),Hooks.on("renderActorSheet",function(obj,html){if(hlodebug=game.settings.get("hlo-importer","debugEnabled"),"pf2e"!=game.system.id)console.log("%cHLO Importer | %cWrong game system. %cNot adding HLO button to actor sheet.",color1,color5,color4);else{const actor=obj.actor;if(hlodebug&&(console.log("%cHLO Importer | %cPF2e System Version: hlo-importer actor type: "+actor.data.type,color1,color4),console.log("%cHLO Importer | %cCan user modify: "+actor.canUserModify(game.user,"update"),color1,color4)),"character"===actor.data.type&&(0!=actor.canUserModify(game.user,"update")&&hloButton)){let element=html.find(".window-header .window-title");if(1==element.length){let button=$('<a class="popout" style><i class="fas fa-flask"></i>HLO</a>');userToken=game.settings.get("hlo-importer","userToken"),hlodebug&&console.log("%cHLO Importer | %chlo-importer token: "+userToken,color1,color4),button.on("click",()=>hlo.beginHLOImport(obj.object,userToken)),element.after(button)}}}});class HeroLabImporter{constructor(hlodebug){this.color1="color: #7bf542",this.color2="color: #d8eb34",this.color3="color: #ffffff",this.color4="color: #cccccc",this.color5="color: #ff0000",this.hlodebug=hlodebug,this.heroVaultExport=!1,this.heroVaultPrompt=!1}beginHLOImport(targetActor,userToken){let applyChanges=!1,hvCheckbox="";this.heroVaultPrompt&&(hvCheckbox='<br><input type="checkbox" id="checkBoxHVExport" name="checkBoxHVExport" ><label for="checkBoxHVExport"> Export this PC to my HeroVau.lt</label><br>'),new Dialog({title:"Herolab Online Import",content:`
        <div>
          <p>Step 1: Get the character token by clicking on the kebab menu (<strong>â‹®</strong>) on any character on your account. Scroll down to "Element Token" and click the <strong>Get Element Token</strong> button. Click the <strong>Copy to Clipboard</strong> button.</p>
          <p>Step 2: Paste the Element Token from the Herolab Online export dialog below</p>
          <br>
          <p>Please note - items which cannot be matched to the Foundry database will not be imported!<p>
        <div>
        <hr/>
        <div id="divCode">
          Enter the element token of the character you wish to import<br>
          <div id="divOuter">
            <div id="divInner">
              <input id="textBoxElementID" type="text" maxlength="14" />
            </div>
          </div>
        </div>
        ${hvCheckbox}
        <br><br><strong>Once you click Import, please be patient as the process might take up to 45 seconds to complete.</strong><br><br>
        <style>
        
          #textBoxElementID {
              border: 0px;
              padding-left: 5px;
              letter-spacing: 2px;
              width: 330px;
              min-width: 330px;
            }
            
            #divInner{
              left: 0;
              position: sticky;
            }
            
            #divOuter{
              width: 285px; 
              overflow: hidden;
            }
    
            #divCode{  
              border: 1px solid black;
              width: 300px;
              margin: 0 auto;
              padding: 5px;
            }
    
        </style>
        `,buttons:{yes:{icon:"<i class='fas fa-check'></i>",label:"Import",callback:()=>applyChanges=!0},no:{icon:"<i class='fas fa-times'></i>",label:"Cancel"}},default:"yes",close:html=>{var HLOElementID;applyChanges&&(HLOElementID=html.find('[id="textBoxElementID"]')[0].value,console.log(html.find('[id="checkBoxHVExport"]').length),html.find('[id="checkBoxHVExport"]').length&&"on"==html.find('[id="checkBoxHVExport"]')[0].value&&(this.heroVaultExport=!0),this.convertHLOCharacter(targetActor,HLOElementID,userToken))}}).render(!0)}convertHLOCharacter(targetActor,HLOElementID,userToken){var pf2eVersion=game.data.system.data.version;let error=!1;var self=this,xmlhttp=new XMLHttpRequest;xmlhttp.onreadystatechange=function(){if(4==this.readyState&&200==this.status){let responseJSON=JSON.parse(this.responseText);hlodebug&&console.log("%cHLO Importer | %c"+responseJSON,color1,color4),responseJSON.hasOwnProperty("error")?(hlodebug&&console.log("%cHLO Importer | %cerror found in response",color1,color4),error=!0):hlodebug&&console.log("%cHLO Importer | %c"+Object.keys(responseJSON.characterData).length,color1,color4),error?new Dialog({title:"Herolab Online Import",content:`
                   <div>
                      <h3>Error</h3>
                      <p>${responseJSON.error}<p>
                   </div><br>`,buttons:{yes:{icon:"<i class='fas fa-check'></i>",label:"Ok"}},default:"yes"}).render(!0):1<Object.keys(responseJSON.characterData).length?(hlodebug&&console.log("%cHLO Importer | %cCalling checkHLOCharacterIsCorrect",color1,color4),self.checkHLOCharacterIsCorrect(targetActor,responseJSON)):ui.notifications.warn("Unable to convert. Please file a bug with the Conversion ID: "+responseJSON.ConversionID)}},hlodebug&&(console.log("%cHLO Importer | %cusertoken: "+userToken,color1,color4),console.log("%cHLO Importer | %cPF2e System Version: "+pf2eVersion,color1,color4)),""==userToken?xmlhttp.open("GET","https://www.pf2player.com/foundrymodule.php?elementID="+encodeURIComponent(HLOElementID)+"&pf2e="+pf2eVersion+"&hloi="+hloiVer,!0):xmlhttp.open("GET","https://www.pf2player.com/foundrymodule.php?elementID="+encodeURIComponent(HLOElementID)+"&pf2e="+pf2eVersion+"&hloi="+hloiVer+"&userToken="+encodeURIComponent(userToken),!0),xmlhttp.send()}checkHLOCharacterIsCorrect(targetActor,responseJSON){hlodebug&&(console.log("%cHLO Importer | %cin checkHLOCharacterIsCorrect",color1,color4),console.log("%cHLO Importer | %c"+responseJSON,color1,color4));let correctCharacter=!1,charImport=responseJSON.characterData;responseJSON.conversionData;new Dialog({title:charImport.name,content:`
        <div><h2>Conversion Log:<br>`+responseJSON.conversionData+"</div><br><div><strong>Continue importing "+charImport.name+", level "+charImport.data.details.level.value+" "+charImport.data.details.class.value+`?</strong></div><br><br>
        `,buttons:{yes:{icon:"<i class='fas fa-check'></i>",label:"Proceed",callback:()=>correctCharacter=!0},no:{icon:"<i class='fas fa-times'></i>",label:"Cancel"}},default:"yes",close:html=>{correctCharacter&&this.importHLOCharacter(targetActor,charImport)}}).render(!0)}async importHLOCharacter(targetActor,charImport){var importPCID=new RegExp(charImport._id,"g"),targetPCID=targetActor.data._id;let charDataStr=JSON.stringify(charImport);charDataStr=charDataStr.replace(importPCID,targetPCID),charImport=JSON.parse(charDataStr),hlodebug&&console.log("%cHLO Importer | %c Importing "+charImport.name,color1,color4),targetActor.importFromJSON(JSON.stringify(charImport)),this.heroVaultExport&&(hlodebug&&console.log("%cHLO Importer | %cperforming a HeroVau.lt Export",color1,color4),doHVExport(JSON.stringify(charImport),targetActor))}}Hooks.on("init",()=>{game.modules.get("hlo-importer").api={hloShim:hloShim,hloActive:hloActive},Hooks.callAll("hloimporterReady",game.modules.get("hlo-importer").api)});export{hloShim,hloActive,HeroLabImporter};